{"version":3,"sources":["./src/app/contact-form/contact-form.component.ts","./src/app/contact-form/contact-form.component.html","./src/environments/environment.ts","./src/app/services/forms.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/themes.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core'\nimport { ThemesService } from '../services/themes.service'\nimport { FormsService } from '../services/forms.service'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Subscription } from 'rxjs'\nimport { Feedback } from '../models/feedback.models'\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.scss'],\n  providers: [ThemesService, FormsService],\n})\nexport class ContactFormComponent implements OnInit, OnDestroy {\n  @Output() messageDelivered = new EventEmitter<object>()\n  constructor(\n    private themesService: ThemesService,\n    private formsService: FormsService\n  ) {}\n  themes: [string?] = ['Загрузка...']\n  btnDisabled = false\n  private subs: [Subscription?] = []\n\n  feedbackForm: FormGroup = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    tel: new FormControl('', [\n      Validators.required,\n      Validators.pattern(\n        '^((8|\\\\+7)[\\\\- ]?)?(\\\\(?\\\\d{3}\\\\)?[\\\\- ]?)?[\\\\d\\\\- ]{7,10}$'\n      ),\n    ]),\n    theme: new FormControl('Другое'),\n    message: new FormControl('', Validators.required),\n  })\n\n  changeName(): void {\n    this.feedbackForm.controls.name.setValue(\n      this.feedbackForm.controls.name.value.trim()\n    )\n  }\n\n  ngOnInit(): void {\n    this.themesService.getThemes().subscribe(\n      (data: any) => {\n        this.themes = data\n        this.feedbackForm.controls.theme.setValue(this.themes[0])\n      },\n      (error) => {\n        this.themes[0] = 'Другое'\n        this.feedbackForm.controls.theme.setValue(this.themes[0])\n      }\n    )\n\n    Object.keys(this.feedbackForm.controls)\n      .filter((c) => c !== 'theme')\n      .forEach((control) => {\n        this.subs.push(this.subToChange(control))\n      })\n  }\n\n  subToChange(control: string): Subscription {\n    return this.feedbackForm.controls[control].valueChanges.subscribe((val) => {\n      if (control === 'tel') {\n        const formatted: string = val.trim().replace(/[^+\\d]/g, '')\n        if (val !== formatted) {\n          this.feedbackForm.controls[control].setValue(formatted)\n        }\n        return\n      }\n      if (val !== val.trim()) {\n        this.feedbackForm.controls[control].setValue(val.trim())\n      }\n    })\n  }\n\n  submit(): void {\n    this.btnDisabled = true\n    const body: Feedback = {\n      name: this.feedbackForm.controls.name.value,\n      email: this.feedbackForm.controls.email.value,\n      tel: this.feedbackForm.controls.tel.value,\n      theme: this.feedbackForm.controls.theme.value,\n      message: this.feedbackForm.controls.message.value,\n    }\n    this.formsService.postFeedback(body).subscribe(\n      (data: any) => {\n        if (data?.resMes) {\n          this.messageDelivered.emit(data)\n        }\n      },\n      (error) => {\n        this.messageDelivered.emit(error)\n      }\n    )\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub?.unsubscribe()\n      console.log('unsub to: ')\n      console.log(sub)\n    })\n  }\n}\n","<div class=\"contact-form\">\n\n  <div class=\"contact-form__header\">\n    <div class=\"contact-form__header__wrapper\">\n      <div class=\"contact-form__header-panel  \">\n        <div class=\"contact-form__header-panel__front-side\"></div>\n        <div class=\"contact-form__header-panel__text\">Напишите нам</div>\n        <div class=\"contact-form__header-panel__back-side\"></div>\n      </div>\n    </div>\n  </div>\n\n  <form class=\"contact-form__form-block\" [formGroup]=\"feedbackForm\">\n\n    <div class=\"contact-form__form-block__form-group\" >\n\n      <label>Ваше имя:</label>\n\n      <div class=\"contact-form__form-block__form-group__input\" >\n        <img src=\"../../assets/icons/person_black_24dp.svg\">\n        <input type=\"text\" name=\"name\" formControlName=\"name\">\n      </div>\n\n      <div class=\"contact-form__form-block__form-group__alert\" *ngIf=\"feedbackForm.controls['name'].invalid && feedbackForm.controls['name'].touched\">\n        Некорректное имя\n      </div>\n\n    </div>\n\n    <div class=\"contact-form__form-block__form-group\">\n\n      <label>Ваш Email:</label>\n\n      <div class=\"contact-form__form-block__form-group__input\">\n        <img src=\"../../assets/icons/email_black_24dp.svg\">\n        <input type=\"text\" name=\"email\" formControlName=\"email\">\n      </div>\n\n      <div class=\"contact-form__form-block__form-group__alert\" *ngIf=\"feedbackForm.controls['email'].invalid && feedbackForm.controls['email'].touched\">\n        Некорректный email\n      </div>\n\n    </div>\n\n    <div class=\"contact-form__form-block__form-group\">\n\n      <label>Ваш телефон:</label>\n\n      <div class=\"contact-form__form-block__form-group__input\">\n        <img src=\"../../assets/icons/phone_black_24dp.svg\">\n        <input type=\"text\" class=\"err\" formControlName=\"tel\" mask=\"+0 (000) 000-00-00\">\n      </div>\n\n      <div class=\"contact-form__form-block__form-group__alert\" *ngIf=\"feedbackForm.controls['tel'].invalid && feedbackForm.controls['tel'].touched\">\n        некорректный телефон\n      </div>\n\n    </div>\n\n    <div class=\"contact-form__form-block__form-group\">\n\n      <label>Тема:</label>\n\n      <div class=\"contact-form__form-block__form-group__input\" >\n        <select formControlName=\"theme\">\n          <option *ngFor=\"let theme of themes\">{{ theme }}</option>\n        </select>\n      </div>\n\n    </div>\n\n    <div class=\"contact-form__form-block__form-group\">\n\n      <label>Ваше сообщение:</label>\n\n      <div class=\"contact-form__form-block__form-group__input\" >\n        <textarea formControlName=\"message\"></textarea>\n      </div>\n\n      <div class=\"contact-form__form-block__form-group__alert\" *ngIf=\"feedbackForm.controls['message'].invalid && feedbackForm.controls['message'].touched\">\n        Некорректное сообщение\n      </div>\n    </div>\n\n    <div class=\"contact-form__form-block__form-group\">\n\n      <label>Цифры:</label>\n\n      <div class=\"contact-form__form-block__form-group__captcha\" >\n        <input type=\"number\">\n        <img src=\"../../assets/captcha.jpg\">\n      </div>\n\n      <div class=\"contact-form__form-block__form-group__alert contact-form__form-block__form-group__alert_captcha\" hidden>\n        Ошибка, попробуйте еще раз\n      </div>\n    </div>\n\n    <button #sendBtn (click)=\"submit()\" [disabled]=\"feedbackForm.controls['name'].invalid || feedbackForm.controls['email'].invalid || feedbackForm.controls['tel'].invalid || btnDisabled\">\n      Отправить письмо!\n    </button>\n\n\n  </form>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'http://localhost:61346/api',\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Feedback } from '../models/feedback.models'\nimport { environment } from '../../environments/environment'\nimport { Observable } from 'rxjs'\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormsService {\n  constructor(private http: HttpClient) {}\n\n  postFeedback(feedback: Feedback): Observable<object> {\n    const body = {\n      name: feedback.name,\n      email: feedback.email,\n      tel: feedback.tel,\n      theme: feedback.theme,\n      message: feedback.message,\n    }\n    return this.http.post(`${environment.api_url}/Feedback`, body, {})\n  }\n}\n","<div class=\"container\">\n<app-contact-form *ngIf=\"!formHidden; else modal\" (messageDelivered)=\"showModal($event)\"></app-contact-form>\n  <ng-template #modal>\n    <div class=\"modal\" *ngIf=\"messageIsSaved; else errorBlock\">\n      Спасибо, информация сохранена!\n      <p>Ваше имя: {{ message.contactName }}</p>\n      <p>Тема: {{ message.theme }}</p>\n      <p>Текст сообщения: {{ message.content }}</p>\n    </div>\n    <ng-template #errorBlock>\n      <div class=\"modal\">\n        <p>Что-то пошло не так, попробуйте еще раз</p>\n        <button (click)=\"formHidden = false\">Попробовать еще раз</button>\n      </div>\n    </ng-template>\n  </ng-template>\n</div>\n","import { Component } from '@angular/core'\nexport interface Message {\n  contactName: string\n  theme: string\n  content: string\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  message: Message = {\n    contactName: '',\n    theme: '',\n    content: '',\n  }\n  constructor() {}\n  messageIsSaved = true\n  formHidden = false\n  showModal(mes: any): void {\n    this.formHidden = !this.formHidden\n    // console.log(mes)\n    if (mes.hasOwnProperty('resMes')) {\n      const receivedMessage: Message = mes.resMes\n      this.message.contactName = receivedMessage.contactName\n      this.message.theme = receivedMessage.theme\n      this.message.content = receivedMessage.content\n      return\n    }\n    this.messageIsSaved = false\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component'\nimport { ContactFormComponent } from './contact-form/contact-form.component'\nimport { HttpClient, HttpClientModule } from '@angular/common/http'\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\n\n// @ts-ignore\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = null\n\n@NgModule({\n  declarations: [AppComponent, ContactFormComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxMaskModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport {environment} from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemesService {\n  constructor(private http: HttpClient) {}\n  getThemes(): Observable<object> {\n    return this.http.get(`${environment.api_url}/themes`)\n  }\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}